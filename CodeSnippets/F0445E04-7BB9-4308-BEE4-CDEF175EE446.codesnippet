<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>generateViewController</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit

class TemplateViewController: UIViewController {
    // MARK: - Properties
    var viewModel: TemplateViewModelInputOutput!

    // MARK: - UI elements

    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()

        setDelegatesAndTargets()
        setupView()
        bind()
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)

        configureWithViewModel(viewModel.output)
    }
}

extension TemplateViewController: PresentableTemplateViewController {
    static func create(
        with viewModel: TemplateViewModelInputOutput
    ) -&gt; TemplateViewController {
        let controller = TemplateViewController()
        controller.viewModel = viewModel

        return controller
    }
}

// MARK: - Helpers
private extension TemplateViewController {
    func setDelegatesAndTargets() {}

    func setupView() {
        installConstraints()
    }

    func installConstraints() {}

    func bind() {
        viewModel.emit = { [weak self] output in
            self?.configureWithViewModel(output)
        }
    }

    func configureWithViewModel(_ output: TemplateViewModel.Output) {}
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>F0445E04-7BB9-4308-BEE4-CDEF175EE446</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>TemplateViewController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
